---
version: '3.7'

#volumes:
    #prometheus_data: {}
    #grafana_data: {}

services:

########################################################################################
# Prometheus
# https://quay.io/repository/prometheus/prometheus?tab=info
# https://hub.docker.com/r/prom/prometheus/
# https://prometheus.io/docs/introduction/https://grafana.com/docs/installation/docker/overview/
########################################################################################

  prometheus:
    image: quay.io/prometheus/prometheus
    container_name: prometheus
    user: "root" # https://github.com/prometheus/prometheus/pull/2859
    volumes:
        - ./prometheus:/etc/prometheus # Prometheus settings
        - ${VOLUME_DIR}/prometheus:/prometheus # Data directory
        #- prometheus_data:/prometheus # Data directory
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    #network_mode: host
    networks:
      - traefik
    #ports:
      #- 9090:9090
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.prometheus-rtr.entrypoints=websecure"
      - "traefik.http.routers.prometheus-rtr.rule=Host(`prometheus.$FQDN`)"
      - "traefik.http.routers.prometheus-rtr.tls=true"
      ## Middlewares
      # - "traefik.http.routers.prometheus-rtr.middlewares=chain-no-auth@file" # No Authentication
      # - "traefik.http.routers.prometheus-rtr.middlewares=chain-basic-auth@file" # Basic Authentication
      - "traefik.http.routers.prometheus-rtr.middlewares=chain-oauth@file" # OAuth 2.0
      ## HTTP Services
      - "traefik.http.routers.prometheus-rtr.service=prometheus-svc"
      - "traefik.http.services.prometheus-svc.loadbalancer.server.port=9090"

########################################################################################
# Grafana
# https://hub.docker.com/r/grafana/grafana/
# https://grafana.com/docs/installation/docker/
########################################################################################

  grafana:
    image: grafana/grafana
    container_name: grafana
    user: "root" # http://docs.grafana.org/installation/docker/#migration-from-a-previous-version-of-the-docker-container-to-5-1-or-later
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    #ports:
      #- 3000:3000
    volumes:
      - ./grafana:/etc/grafana/provisioning # Grafana settings and dashboards
      - ${VOLUME_DIR}/grafana:/var/lib/grafana # Data directory
      #- grafana_data:/var/lib/grafana # Data directory
    networks:
      - traefik
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.grafana-rtr.entrypoints=websecure"
      - "traefik.http.routers.grafana-rtr.rule=Host(`grafana.$FQDN`)"
      - "traefik.http.routers.grafana-rtr.tls=true"
      ## Middlewares
      # - "traefik.http.routers.grafana-rtr.middlewares=chain-no-auth@file" # No Authentication
      # - "traefik.http.routers.grafana-rtr.middlewares=chain-basic-auth@file" # Basic Authentication
      - "traefik.http.routers.grafana-rtr.middlewares=chain-oauth@file" # OAuth 2.0
      ## HTTP Services
      - "traefik.http.routers.grafana-rtr.service=grafana-svc"
      - "traefik.http.services.grafana-svc.loadbalancer.server.port=3000"

  grafana-sidecar:
    image: ansible-job
    build:
      context: ./grafana-sidecar
    container_name: grafana-sidecar
    volumes:
      - ./grafana-sidecar:/tmp
    command: |
      sh -c '
      ansible-galaxy collection install -r ./collections/requirements.yml -p ./collections;
      ansible-playbook --extra-vars "GRAFANA_PASSWORD=${GRAFANA_PASSWORD}" playbook.yml
      '
    networks:
      - traefik
    restart: "no"

########################################################################################
# Alert Manager
# https://prometheus.io/docs/alerting/alertmanager/
# 
########################################################################################

  # alertmanager:
  #   image: quay.io/prometheus/alertmanager:latest
  #   container_name: alertmanager
  #   ports:
  #     - 9093:9093
  #   volumes:
  #     - ${CONFIG_DIR}/alertmanager:/etc/alertmanager
  #   networks:
  #     - traefik
  #   restart: always
  #   command:
  #     - '--config.file=/etc/alertmanager/config.yml'
  #     - '--storage.path=/alertmanager'

########################################################################################
# Node Exporter
# https://hub.docker.com/r/prom/node-exporter/
# https://github.com/prometheus/node_exporter
# https://prometheus.io/docs/guides/node-exporter/
########################################################################################

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node-exporter
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    #ports:
      #- 9100:9100
    networks:
      - traefik
    restart: unless-stopped

########################################################################################
# Cadvisor
# https://github.com/google/cadvisor
# https://hub.docker.com/r/zcube/cadvisor
# https://hub.docker.com/r/dadevel/cadvisor
########################################################################################

  # cadvisor:
  #   #image: ghcr.io/dadevel/cadvisor
  #   image: zcube/cadvisor
  #   container_name: cadvisor
  #   volumes:
  #     - /:/rootfs:ro
  #     - /var/run:/var/run:rw
  #     - /sys:/sys:ro
  #     - /var/lib/docker:/var/lib/docker:ro
  #     - /dev/disk/:/dev/disk:ro
  #   #ports:
  #     #- 8081:8080
  #   networks:
  #     - traefik
  #   restart: unless-stopped
  #   labels:
  #     - "traefik.enable=true"
  #     ## HTTP Routers
  #     - "traefik.http.routers.cadvisor-rtr.entrypoints=websecure"
  #     - "traefik.http.routers.cadvisor-rtr.rule=Host(`cadvisor.$FQDN`)"
  #     - "traefik.http.routers.cadvisor-rtr.tls=true"
  #     ## Middlewares
  #     # - "traefik.http.routers.cadvisor-rtr.middlewares=chain-no-auth@file" # No Authentication
  #     # - "traefik.http.routers.cadvisor-rtr.middlewares=chain-basic-auth@file" # Basic Authentication
  #     - "traefik.http.routers.cadvisor-rtr.middlewares=chain-oauth@file" # OAuth 2.0
  #     ## HTTP Services
  #     - "traefik.http.routers.cadvisor-rtr.service=cadvisor-svc"
  #     - "traefik.http.services.cadvisor-svc.loadbalancer.server.port=8080"

########################################################################################
# CoreDNS
# https://github.com/coredns/coredns.io
########################################################################################

  # coredns:
  #   image: coredns/coredns
  #   container_name: coredns
  #   ports:
  #     - 53:53/udp
  #   volumes:
  #     - ./coredns:/coredns-config
  #   command: -conf coredns-config/Corefile
  #   networks:
  #     - traefik
  #   restart: unless-stopped
  #   labels:
  #     - "traefik.enable=true"
  #     ## HTTP Routers
  #     - "traefik.http.routers.coredns-rtr.entrypoints=websecure"
  #     - "traefik.http.routers.coredns-rtr.rule=Host(`coredns.$FQDN`)"
  #     - "traefik.http.routers.coredns-rtr.tls=true"
  #     ## Middlewares
  #     # - "traefik.http.routers.coredns-rtr.middlewares=chain-no-auth@file" # No Authentication
  #     # - "traefik.http.routers.coredns-rtr.middlewares=chain-basic-auth@file" # Basic Authentication
  #     - "traefik.http.routers.coredns-rtr.middlewares=chain-oauth@file" # OAuth 2.0
  #     ## HTTP Services
  #     - "traefik.http.routers.coredns-rtr.service=coredns-svc"
  #     - "traefik.http.services.coredns-svc.loadbalancer.server.port=53"

########################################################################################

networks:
  traefik:
    name: traefik
    external: true
    #run: docker network create traefik
