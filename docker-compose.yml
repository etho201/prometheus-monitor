---
version: '3.7'

#volumes:
    #prometheus_data: {}
    #grafana_data: {}

services:

########################################################################################
# Prometheus
# https://quay.io/repository/prometheus/prometheus?tab=info
# https://hub.docker.com/r/prom/prometheus/
# https://prometheus.io/docs/introduction/https://grafana.com/docs/installation/docker/overview/
########################################################################################

  prometheus:
    image: quay.io/prometheus/prometheus
    container_name: prometheus
    user: "root" # https://github.com/prometheus/prometheus/pull/2859
    volumes:
        - ./prometheus:/etc/prometheus # Prometheus settings
        - ${VOLUME_DIR}/prometheus:/prometheus # Data directory
        #- prometheus_data:/prometheus # Data directory
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    #network_mode: host
    networks:
      - backend
    #ports:
      #- 9090:9090
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.backend=prometheus"
      - "traefik.frontend.rule=Host:prometheus.${FQDN}"
      - "traefik.port=9090"
      - "traefik.docker.network=backend"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
      # Require oauth2 for authentication
      - "traefik.frontend.auth.forward.address=https://${FQDN}/oauth2/auth"
      - "traefik.frontend.auth.forward.trustForwardHeader=true"
      - "traefik.frontend.auth.forward.authResponseHeaders=X-Auth-Request-User,X-Auth-Request-Email,Authorization,Set-Cookie"
      - "traefik.frontend.errors.401.backend=oauth2"
      - "traefik.frontend.errors.401.status=401"
      - "traefik.frontend.errors.401.query=/oauth2/sign_in"

########################################################################################
# Grafana
# https://hub.docker.com/r/grafana/grafana/
# https://grafana.com/docs/installation/docker/
########################################################################################

  grafana:
    image: grafana/grafana
    container_name: grafana
    user: "root" # http://docs.grafana.org/installation/docker/#migration-from-a-previous-version-of-the-docker-container-to-5-1-or-later
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    #ports:
      #- 3000:3000
    volumes:
      - ./grafana:/etc/grafana/provisioning # Grafana settings and dashboards
      - ${VOLUME_DIR}/grafana:/var/lib/grafana # Data directory
      #- grafana_data:/var/lib/grafana # Data directory
    networks:
      - backend
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.backend=grafana"
      - "traefik.frontend.rule=Host:grafana.${FQDN}"
      - "traefik.port=3000"
      - "traefik.docker.network=backend"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"

########################################################################################
# Alert Manager
# https://prometheus.io/docs/alerting/alertmanager/
# 
########################################################################################

  alertmanager:
    image: quay.io/prometheus/alertmanager:latest
    container_name: alertmanager
    ports:
      - 9093:9093
    volumes:
      - ${CONFIG_DIR}/alertmanager:/etc/alertmanager
    networks:
      - backend
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

########################################################################################
# Node Exporter
# https://hub.docker.com/r/prom/node-exporter/
# https://github.com/prometheus/node_exporter
# https://prometheus.io/docs/guides/node-exporter/
########################################################################################

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node-exporter
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    #ports:
      #- 9100:9100
    networks:
      - backend
    restart: unless-stopped

########################################################################################
# Cadvisor
# https://github.com/google/cadvisor
# https://hub.docker.com/r/zcube/cadvisor
########################################################################################

  cadvisor:
    image: zcube/cadvisor
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    #expose:
      #- 8080
    networks:
      - backend
    restart: unless-stopped

########################################################################################
CoreDNS
https://github.com/coredns/coredns.io
########################################################################################

  coredns:
    image: coredns/coredns
    container_name: coredns
    ports:
      - 53:53/udp
    volumes:
      - ./coredns:/coredns-config
    command: -conf coredns-config/Corefile
    networks:
      - backend
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.backend=coredns"
      - "traefik.frontend.rule=Host:coredns.${FQDN}"
      - "traefik.port=53"
      - "traefik.docker.network=backend"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"

########################################################################################

networks:
  backend:
    external:
      name: backend
      #run: docker network create --name=backend
